apiVersion: apps/v1
kind: Deployment
metadata:
  name: adventurelog
  labels:
    app: adventurelog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adventurelog
  template:
    metadata:
      labels:
        app: adventurelog
    spec:
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media-pvc
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
      containers:
        - name: frontend
          image: ghcr.io/seanmorley15/adventurelog-frontend:latest
          ports:
            - containerPort: 3000
          env:
            - name: FRONTEND_PORT
              value: "8015"
            - name: PUBLIC_SERVER_URL
              value: "http://backend:8000"
            - name: ORIGIN
              value: "http://localhost:8015"
            - name: BODY_SIZE_LIMIT
              value: "Infinity"
          readinessProbe:
            exec:
              command: ["/nodejs/bin/node", "-e", "require('net').connect(3000).on('connect', () => process.exit(0)).on('error', () => process.exit(1))"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3

        - name: backend
          image: ghcr.io/seanmorley15/adventurelog-backend:latest
          ports:
            - containerPort: 80
            - containerPort: 8000
          volumeMounts:
            - name: media
              mountPath: /code/media
          env:
            - name: PGHOST
              value: "db"
            - name: POSTGRES_DB
              value: "adventurelog"
            - name: POSTGRES_USER
              value: "adventurelog"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: adventurelog-secret
                  key: adventure-postgres-password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: adventurelog-secret
                  key: secret-key
            - name: DJANGO_ADMIN_USERNAME
              value: "admin"
            - name: DJANGO_ADMIN_PASSWORD
              value: "admin"
            - name: DJANGO_ADMIN_EMAIL
              value: "admin@example.com"
            - name: BACKEND_PORT
              value: "8016"
            - name: PUBLIC_URL
              value: "http://localhost:8016"
            - name: FRONTEND_URL
              value: "http://localhost:8015"
            - name: CSRF_TRUSTED_ORIGINS
              value: "http://localhost:8016,http://localhost:8015"
            - name: DEBUG
              value: "false"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5

        - name: db
          image: postgis/postgis:16-3.5
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_DB
              value: "adventurelog"
            - name: POSTGRES_USER
              value: "adventurelog"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: adventurelog-secret
                  key: adventure-postgres-password
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "adventurelog"]
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 10
            failureThreshold: 5
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: adventurelog
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: backend
      port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: adventurelog
  ports:
    - name: http
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: adventurelog
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: adventurelog-secret
type: Opaque
stringData:
  adventure-postgres-password: changeme123
  secret-key: changeme123
